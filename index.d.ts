/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export interface EventTypes {
  blockReceived: string
  peerConnected: string
  peerDisconnected: string
}
export declare function getEventTypes(): EventTypes
export interface PeerConnectedEvent {
  peerId: string
  host: string
  port: number
}
export interface PeerDisconnectedEvent {
  peerId: string
  host: string
  port: number
  message?: string
}
export interface BlockReceivedEvent {
  peerId: string
  height: number
  weight: string
  headerHash: string
  timestamp: number
  coinAdditions: Array<CoinRecord>
  coinRemovals: Array<CoinRecord>
  coinSpends: Array<CoinSpend>
  coinCreations: Array<CoinRecord>
  hasTransactionsGenerator: boolean
  generatorSize: number
}
export interface CoinRecord {
  parentCoinInfo: string
  puzzleHash: string
  amount: string
}
export interface CoinSpend {
  coin: CoinRecord
  puzzleReveal: string
  solution: string
  offset: number
}
export declare function initTracing(): void
export declare class ChiaBlockListener {
  constructor()
  addPeer(host: string, port: number, networkId: string): string
  disconnectPeer(peerId: string): boolean
  disconnectAllPeers(): void
  getConnectedPeers(): Array<string>
  on(event: string, callback: (...args: any[]) => any): void
  off(event: string, callback: (...args: any[]) => any): void
  getBlockByHeight(peerId: string, height: number): BlockReceivedEvent
  getBlocksRange(peerId: string, startHeight: number, endHeight: number): Array<BlockReceivedEvent>
}
